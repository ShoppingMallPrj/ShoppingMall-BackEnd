name: CI/CD Docker

on:
  push:
    branches: [ master ]

env:
  DOCKER_IMAGE: ghcr.io/shoppingmallprj/shoppingmall-backend
  VERSION: ${{ github.sha }}
  NAME: shoppingmall

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: see files
        run: ls ./build

      - name: Setup Secret Keys (email, db, S3)
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.spring.mail.password = "${{secrets.GMAIL_SMTP_PASSWORD}}"' src/main/resources/application-email.yml
#            yq -i '.spring.datasource.username = "${{secrets.DB_USER_NAME}}"' 'src/main/resources/application-db.yml'
#            yq -i '.spring.datasource.password = "${{secrets.DB_PASSWORD}}"' 'src/main/resources/application-db.yml'
#            yq -i '.cloud.aws.credentials.accessKey = "${{secrets.S3_ACCESSKEY}}"' 'src/main/resources/application-aws.yml'
#            yq -i '.cloud.aws.credentials.secretKey = "${{secrets.S3_SECRET_KEY}}"' 'src/main/resources/application-aws.yml'
#            yq -i '.kakao.client.id = "${{secrets.KAKAO_KEY}}"' 'src/main/resources/application-social.yml'


      - name: print keys
        run: |
          cat src/main/resources/application-email.yml
          cat src/main/resources/application-aws.yml
          cat src/main/resources/application-social.yml

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: see files
        run: ls -al

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-


      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 8080:8080 --name shoppingmall --restart always ${{ env.DOCKER_IMAGE }}:latest
